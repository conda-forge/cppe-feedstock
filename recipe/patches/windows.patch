diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5d5d359..c327ea1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,8 @@
-cmake_minimum_required(VERSION 3.0.0)
-cmake_policy(VERSION 3.0.0)
+cmake_minimum_required(VERSION 3.12...3.20)
 
-project(cppe LANGUAGES CXX)
+project(cppe-top LANGUAGES CXX)
 
-list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
 
 include(psi4OptionsTools)
 option_with_print(BUILD_SHARED_LIBS "Build shared libraries instead of static ones (CMake default is static)" ON)
@@ -26,23 +25,20 @@ if(NOT CMAKE_REQUIRED_QUIET)
 endif()
 
 # Export compile commands if cmake supports it.
-if (CMAKE_VERSION VERSION_GREATER 3.5.0)
-	set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
-endif()
+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
 
 set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage)
 
 set(pybind_ext "")
 set(python_flags "")
-if(${ENABLE_PYTHON_INTERFACE})
-    set(Python_ADDITIONAL_VERSIONS 3.8 3.7 3.6)  # adjust with CMake minimum FindPythonInterp
-    find_package(PythonLibsNew 3.6 REQUIRED)
-    message(STATUS "${Cyan}Found Python ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}${ColourReset}: ${PYTHON_EXECUTABLE} (found version ${PYTHON_VERSION_STRING})")
+if(ENABLE_PYTHON_INTERFACE)
+    find_package(Python 3.8 REQUIRED COMPONENTS Interpreter Development)
+    message(STATUS "${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})")
     set(pybind_ext "pybind11_external")
     set(python_flags
-              -DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}
-              -DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR}
-              -DPYTHON_LIBRARY=${PYTHON_LIBRARY}
+              -DPython_EXECUTABLE=${Python_EXECUTABLE}
+              -DPython_INCLUDE_DIR=${Python_INCLUDE_DIR}
+              -DPython_LIBRARY=${Python_LIBRARY}
         )
 endif()
 
@@ -53,9 +49,9 @@ include(ExternalProject)
 
 add_subdirectory(external/upstream)
 
-ExternalProject_Add(cppe-core
+ExternalProject_Add(cppe
    DEPENDS ${pybind_ext}
-   SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/cppe
+   SOURCE_DIR ${PROJECT_SOURCE_DIR}/cppe
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}
               -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
               -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
diff --git a/cppe/CMakeLists.txt b/cppe/CMakeLists.txt
index 7bd1b44..25505d5 100644
--- a/cppe/CMakeLists.txt
+++ b/cppe/CMakeLists.txt
@@ -1,9 +1,9 @@
-cmake_minimum_required(VERSION 3.0.0)
-project(cppe-core VERSION 0.3.1 LANGUAGES CXX)
+cmake_minimum_required(VERSION 3.12...3.20)
+
+project(cppe VERSION 0.3.1 LANGUAGES CXX)
 
 include(GNUInstallDirs)
 include(CMakePackageConfigHelpers)
-include(ExternalProject)
 
 if(ENABLE_OPENMP)
     find_package(OpenMP)
@@ -41,7 +41,6 @@ add_library(cppe
   ${CPPE_SOURCES}
 )
 
-
 target_include_directories(cppe PUBLIC ${EIGEN3_INCLUDE_DIRS})
 
 if(${ENABLE_PYTHON_INTERFACE})
